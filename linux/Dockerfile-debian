FROM debian:bullseye-slim

ENV OS=debian
ENV NGINX_VERSION 1.20.2

# Install fpm
RUN apt update && \
    apt install -y --no-install-recommends ruby ruby-dev && \
    gem install fpm

# Copy dependencies sources folder
COPY bw/deps /tmp/bunkerweb/deps

# Nginx
RUN apt update && \
    apt-get install gnupg2 ca-certificates wget -y && \
    echo "deb https://nginx.org/packages/debian/ bullseye nginx" > /etc/apt/sources.list.d/nginx.list && \
    echo "deb-src https://nginx.org/packages/debian/ bullseye nginx" >> /etc/apt/sources.list.d/nginx.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62 && \
    apt-get update && \
    apt-get install -y --no-install-recommends nginx=${NGINX_VERSION}-1~bullseye

# Compile and install dependencies
RUN apt update && \
    apt install --no-install-recommends bash python3-pip libssl-dev git libpcre++-dev zlib1g-dev libxml2-dev libyajl-dev pkgconf libcurl4-openssl-dev libgeoip-dev liblmdb-dev apt-utils bash build-essential autoconf libtool automake g++ gcc libxml2-dev make musl-dev gnupg patch libreadline-dev libpcre3-dev libgd-dev -y && \
    mkdir -p /usr/share/bunkerweb/deps && \
    chmod +x /tmp/bunkerweb/deps/install.sh && \
    bash /tmp/bunkerweb/deps/install.sh && \
    mkdir /usr/share/bunkerweb/deps/python && \
    pip3 install --no-cache-dir --require-hashes --target /usr/share/bunkerweb/deps/python -r /tmp/bunkerweb/deps/requirements.txt
# Copy files
# can't exclude deps from . so we are copying everything by hand
COPY bw/api /usr/share/bunkerweb/api
COPY bw/core /usr/share/bunkerweb/core
COPY bw/cli /usr/share/bunkerweb/cli
COPY bw/helpers /usr/share/bunkerweb/helpers
COPY bw/lua /usr/share/bunkerweb/lua
COPY bw/misc /usr/share/bunkerweb/misc
COPY bw/gen /usr/share/bunkerweb/gen
COPY bw/settings.json etc/bunkerweb/settings.json
COPY db /usr/share/bunkerweb/db
COPY bw/confs /etc/bunkerweb/confs
COPY bw/loading /usr/share/bunkerweb/loading
COPY utils /usr/share/bunkerweb/utils
COPY VERSION /usr/share/bunkerweb/VERSION
COPY scheduler /usr/share/bunkerweb/scheduler
COPY ui /usr/share/bunkerweb/ui

# Setup BW
RUN cp /usr/share/bunkerweb/helpers/bwcli /usr/bin/ && \
    chmod 755 /usr/bin/bwcli && \
    mkdir /etc/bunkerweb/configs && \
    mkdir /var/cache/bunkerweb/ && \
    mkdir /etc/bunkerweb/plugins && \
    mkdir /var/tmp/bunkerweb/ && \
    #mkdir /var/www/html && \
    echo "Linux" > /usr/share/bunkerweb/INTEGRATION && \
    #It's a find command that will find all files in the bunkerweb directory, excluding the ui/deps directory, and then chmod them to 0740.
    find /usr/share/bunkerweb -path /usr/share/bunkerweb/ui/deps -prune -o -type f -exec chmod 0740 {} \; && \
    #It's a find command that will find all files in the bunkerweb directory, excluding the ui/deps directory, and then chmod them to 0740.
    find /usr/share/bunkerweb -path /usr/share/bunkerweb/ui/deps -prune -o -type d -exec chmod 0750 {} \; && \
    chmod 770 /var/cache/bunkerweb/ /var/tmp/bunkerweb/ && \
    chmod 750 /usr/share/bunkerweb/gen/main.py /usr/share/bunkerweb/scheduler/main.py /usr/share/bunkerweb/cli/main.py /usr/share/bunkerweb/helpers/*.sh /usr/share/bunkerweb/ui/main.py && \
    # Don't forget to add /var/www/html on the above line
    find /usr/share/bunkerweb/core/*/jobs/* -type f -exec chmod 750 {} \; && \
    pip install --no-cache-dir --upgrade pip && \
    pip install wheel && \
    mkdir /usr/share/bunkerweb/ui/deps/python && \
    pip install --no-cache-dir --require-hashes --no-deps --target /usr/share/bunkerweb/deps/python -r /usr/share/bunkerweb/ui/deps/requirements.txt && \
    pip install --no-cache-dir gunicorn && \
	chmod 755 /usr/share/bunkerweb

# Copy Linux files
COPY linux/variables.env /etc/bunkerweb/variables.env
COPY linux/ui.env /etc/bunkerweb/ui.env
COPY linux/scripts /usr/share/bunkerweb/scripts
COPY linux/fpm.sh /usr/share/fpm.sh
RUN chmod +x /usr/share/bunkerweb/scripts/*.sh /usr/share/fpm.sh
COPY linux/fpm-ubuntu /usr/share/.fpm
COPY linux/bunkerweb.service /usr/share/bunkerweb.service
COPY linux/bunkerweb-ui.service /usr/share/bunkerweb-ui.service

# Generate DEB at startup
VOLUME /data
WORKDIR /usr/share/
ENTRYPOINT ["/usr/share/fpm.sh", "deb"]
